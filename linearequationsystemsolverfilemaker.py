import util.assets
import os
import linearequationsystemgenerator


class LinearEquationSystemSolverFileMaker:

    def __init__(self, chemical_equation: str) -> None:

        self.chemical_equation = chemical_equation
        self.current_directory = os.path.dirname(__file__)
        equation_generator_object = (
            linearequationsystemgenerator.LinearEquationsSystemGenerator(
                chemical_equation=self.chemical_equation
            )
        )

        self.system_of_linear_equations = (
            equation_generator_object.generateEquationSystem()
        )
        self.num_of_variables = (
            equation_generator_object.demand_for_variables_to_solve_count
        )
        self.symbols_list = util.assets.parameter_symbols
        self.variables_str = ""

        for i, symbol in enumerate(self.symbols_list):
            self.variables_str += symbol
            if self.num_of_variables == i:
                break
            else:
                self.variables_str += ","

    def generate_equations_and_build_solver_file(self):
        self.variables_str = self.variables_str[0:-2]
        file_content = rf"""# [DO NOT MODIFY] Automatically generated by EquationUtil().LinearEquationSystemSolverFileMaker
from sympy import symbols
from sympy.solvers.solveset import linsolve
import os
from JsonHandler import Handler


current_directory = os.path.dirname(__file__)
{self.variables_str} = symbols("{self.variables_str}")
equation_solution = linsolve({self.system_of_linear_equations},({self.variables_str}))


x = symbols(str({self.variables_str[::-1][0]}))
equation_solution = [expr.subs(x, 1) for expr in equation_solution][0]


handler_object = Handler(file_path=r"{self.current_directory}")
handler_object.write()

handler_object.update(key="equation_solution",value=str(equation_solution))
    """
        #

        with open(
            rf"{self.current_directory}\linear_equations_system_solver.automatic.py",
            "w",
        ) as solver_file:
            solver_file.write(file_content)

    def execute_solver_file(self):
        with open(
            rf"{self.current_directory}\linear_equations_system_solver.automatic.py"
        ) as file:
            exec(file.read())
